apiVersion: platform.kratix.io/v1alpha1
kind: Promise
metadata:
  creationTimestamp: null
  name: env
  namespace: default
spec:
  workerClusterResources:
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: dapr
      namespace: default
    spec:
      workerClusterResources:
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/part-of: dapr
          name: components.dapr.io
          namespace: dapr-system
        spec:
          group: dapr.io
          names:
            categories:
            - all
            - dapr
            kind: Component
            plural: components
            singular: component
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: Component describes an Dapr component type
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  auth:
                    description: Auth represents authentication details for the component
                    properties:
                      secretStore:
                        type: string
                    required:
                    - secretStore
                    type: object
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  scopes:
                    items:
                      type: string
                    type: array
                  spec:
                    description: ComponentSpec is the spec for a component
                    properties:
                      ignoreErrors:
                        type: boolean
                      initTimeout:
                        type: string
                      metadata:
                        items:
                          description: MetadataItem is a name/value pair for a metadata
                          properties:
                            name:
                              type: string
                            secretKeyRef:
                              description: SecretKeyRef is a reference to a secret
                                holding the value for the metadata item. Name is the
                                secret name, and key is the field in the secret.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            value:
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - name
                          type: object
                        type: array
                      type:
                        type: string
                      version:
                        type: string
                    required:
                    - metadata
                    - type
                    - version
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.9.2
          creationTimestamp: null
          labels:
            app.kubernetes.io/part-of: dapr
          name: configurations.dapr.io
          namespace: dapr-system
        spec:
          group: dapr.io
          names:
            kind: Configuration
            listKind: ConfigurationList
            plural: configurations
            singular: configuration
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: Configuration describes an Dapr configuration setting.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ConfigurationSpec is the spec for an configuration.
                    properties:
                      accessControl:
                        description: AccessControlSpec is the spec object in ConfigurationSpec.
                        properties:
                          defaultAction:
                            type: string
                          policies:
                            items:
                              description: AppPolicySpec defines the policy data structure
                                for each app.
                              properties:
                                appId:
                                  type: string
                                defaultAction:
                                  type: string
                                namespace:
                                  type: string
                                operations:
                                  items:
                                    description: AppOperationAction defines the data
                                      structure for each app operation.
                                    properties:
                                      action:
                                        type: string
                                      httpVerb:
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        type: string
                                    required:
                                    - action
                                    - name
                                    type: object
                                  type: array
                                trustDomain:
                                  type: string
                              required:
                              - appId
                              type: object
                            type: array
                          trustDomain:
                            type: string
                        type: object
                      api:
                        description: APISpec describes the configuration for Dapr
                          APIs.
                        properties:
                          allowed:
                            items:
                              description: APIAccessRule describes an access rule
                                for allowing a Dapr API to be enabled and accessible
                                by an app.
                              properties:
                                name:
                                  type: string
                                protocol:
                                  type: string
                                version:
                                  type: string
                              required:
                              - name
                              - version
                              type: object
                            type: array
                        type: object
                      appHttpPipeline:
                        description: PipelineSpec defines the middleware pipeline.
                        properties:
                          handlers:
                            items:
                              description: HandlerSpec defines a request handlers.
                              properties:
                                name:
                                  type: string
                                selector:
                                  description: SelectorSpec selects target services
                                    to which the handler is to be applied.
                                  properties:
                                    fields:
                                      items:
                                        description: SelectorField defines a selector
                                          fields.
                                        properties:
                                          field:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                        - field
                                        - value
                                        type: object
                                      type: array
                                  required:
                                  - fields
                                  type: object
                                type:
                                  type: string
                              required:
                              - name
                              - type
                              type: object
                            type: array
                        required:
                        - handlers
                        type: object
                      components:
                        description: ComponentsSpec describes the configuration for
                          Dapr components
                        properties:
                          deny:
                            description: Denylist of component types that cannot be
                              instantiated
                            items:
                              type: string
                            type: array
                        type: object
                      features:
                        items:
                          description: FeatureSpec defines the features that are enabled/disabled.
                          properties:
                            enabled:
                              type: boolean
                            name:
                              type: string
                          required:
                          - enabled
                          - name
                          type: object
                        type: array
                      httpPipeline:
                        description: PipelineSpec defines the middleware pipeline.
                        properties:
                          handlers:
                            items:
                              description: HandlerSpec defines a request handlers.
                              properties:
                                name:
                                  type: string
                                selector:
                                  description: SelectorSpec selects target services
                                    to which the handler is to be applied.
                                  properties:
                                    fields:
                                      items:
                                        description: SelectorField defines a selector
                                          fields.
                                        properties:
                                          field:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                        - field
                                        - value
                                        type: object
                                      type: array
                                  required:
                                  - fields
                                  type: object
                                type:
                                  type: string
                              required:
                              - name
                              - type
                              type: object
                            type: array
                        required:
                        - handlers
                        type: object
                      metric:
                        default:
                          enabled: true
                        description: MetricSpec defines metrics configuration.
                        properties:
                          enabled:
                            type: boolean
                        required:
                        - enabled
                        type: object
                      mtls:
                        description: MTLSSpec defines mTLS configuration.
                        properties:
                          allowedClockSkew:
                            type: string
                          enabled:
                            type: boolean
                          workloadCertTTL:
                            type: string
                        required:
                        - enabled
                        type: object
                      nameResolution:
                        description: NameResolutionSpec is the spec for name resolution
                          configuration.
                        properties:
                          component:
                            type: string
                          configuration:
                            description: DynamicValue is a dynamic value struct for
                              the component.metadata pair value.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          version:
                            type: string
                        required:
                        - component
                        - configuration
                        - version
                        type: object
                      secrets:
                        description: SecretsSpec is the spec for secrets configuration.
                        properties:
                          scopes:
                            items:
                              description: SecretsScope defines the scope for secrets.
                              properties:
                                allowedSecrets:
                                  items:
                                    type: string
                                  type: array
                                defaultAccess:
                                  type: string
                                deniedSecrets:
                                  items:
                                    type: string
                                  type: array
                                storeName:
                                  type: string
                              required:
                              - storeName
                              type: object
                            type: array
                        required:
                        - scopes
                        type: object
                      tracing:
                        description: TracingSpec defines distributed tracing configuration.
                        properties:
                          otel:
                            description: OtelSpec defines Otel exporter configurations.
                            properties:
                              endpointAddress:
                                type: string
                              isSecure:
                                type: boolean
                              protocol:
                                type: string
                            required:
                            - endpointAddress
                            - isSecure
                            - protocol
                            type: object
                          samplingRate:
                            type: string
                          stdout:
                            type: boolean
                          zipkin:
                            description: ZipkinSpec defines Zipkin trace configurations.
                            properties:
                              endpointAddress:
                                type: string
                            required:
                            - endpointAddress
                            type: object
                        required:
                        - samplingRate
                        type: object
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.5.0
          creationTimestamp: null
          labels:
            app.kubernetes.io/part-of: dapr
          name: resiliencies.dapr.io
          namespace: dapr-system
        spec:
          group: dapr.io
          names:
            categories:
            - dapr
            kind: Resiliency
            listKind: ResiliencyList
            plural: resiliencies
            singular: resiliency
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  scopes:
                    items:
                      type: string
                    type: array
                  spec:
                    properties:
                      policies:
                        properties:
                          circuitBreakers:
                            additionalProperties:
                              properties:
                                interval:
                                  type: string
                                maxRequests:
                                  type: integer
                                timeout:
                                  type: string
                                trip:
                                  type: string
                              type: object
                            type: object
                          retries:
                            additionalProperties:
                              properties:
                                duration:
                                  type: string
                                maxInterval:
                                  type: string
                                maxRetries:
                                  type: integer
                                policy:
                                  type: string
                              type: object
                            type: object
                          timeouts:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      targets:
                        properties:
                          actors:
                            additionalProperties:
                              properties:
                                circuitBreaker:
                                  type: string
                                circuitBreakerCacheSize:
                                  type: integer
                                circuitBreakerScope:
                                  type: string
                                retry:
                                  type: string
                                timeout:
                                  type: string
                              type: object
                            type: object
                          apps:
                            additionalProperties:
                              properties:
                                circuitBreaker:
                                  type: string
                                circuitBreakerCacheSize:
                                  type: integer
                                retry:
                                  type: string
                                timeout:
                                  type: string
                              type: object
                            type: object
                          components:
                            additionalProperties:
                              properties:
                                inbound:
                                  properties:
                                    circuitBreaker:
                                      type: string
                                    retry:
                                      type: string
                                    timeout:
                                      type: string
                                  type: object
                                outbound:
                                  properties:
                                    circuitBreaker:
                                      type: string
                                    retry:
                                      type: string
                                    timeout:
                                      type: string
                                  type: object
                              type: object
                            type: object
                        type: object
                    required:
                    - policies
                    - targets
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/part-of: dapr
          name: subscriptions.dapr.io
          namespace: dapr-system
        spec:
          conversion:
            strategy: Webhook
            webhook:
              clientConfig:
                service:
                  name: dapr-webhook
                  namespace: replaceme
                  path: /convert
              conversionReviewVersions:
              - v1
              - v2alpha1
          group: dapr.io
          names:
            categories:
            - all
            - dapr
            kind: Subscription
            listKind: SubscriptionList
            plural: subscriptions
            singular: subscription
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: Subscription describes an pub/sub event subscription.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  scopes:
                    items:
                      type: string
                    type: array
                  spec:
                    description: SubscriptionSpec is the spec for an event subscription.
                    properties:
                      deadLetterTopic:
                        type: string
                      metadata:
                        additionalProperties:
                          type: string
                        type: object
                      pubsubname:
                        type: string
                      route:
                        type: string
                      topic:
                        type: string
                    required:
                    - pubsubname
                    - route
                    - topic
                    type: object
                type: object
            served: true
            storage: false
          - name: v2alpha1
            schema:
              openAPIV3Schema:
                description: Subscription describes an pub/sub event subscription.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  scopes:
                    items:
                      type: string
                    type: array
                  spec:
                    description: SubscriptionSpec is the spec for an event subscription.
                    properties:
                      deadLetterTopic:
                        description: The optional dead letter queue for this topic
                          to send events to.
                        type: string
                      metadata:
                        additionalProperties:
                          type: string
                        description: The optional metadata to provide the subscription.
                        type: object
                      pubsubname:
                        description: The PubSub component name.
                        type: string
                      routes:
                        description: The Routes configuration for this topic.
                        properties:
                          default:
                            type: string
                          rules:
                            description: The list of rules for this topic.
                            items:
                              description: Rule is used to specify the condition for
                                sending a message to a specific path.
                              properties:
                                match:
                                  description: The optional CEL expression used to
                                    match the event. If the match is not specified,
                                    then the route is considered the default. The
                                    rules are tested in the order specified, so they
                                    should be define from most-to-least specific.
                                    The default route should appear last in the list.
                                  type: string
                                path:
                                  description: The path for events that match this
                                    rule.
                                  type: string
                              required:
                              - match
                              - path
                              type: object
                            type: array
                        type: object
                      topic:
                        description: The topic name to subscribe to.
                        type: string
                    required:
                    - pubsubname
                    - routes
                    - topic
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/component: rbac
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-operator
          namespace: dapr-system
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/component: rbac
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dashboard-reader
          namespace: dapr-system
      - apiVersion: v1
        data:
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0VENDQXAyZ0F3SUJBZ0lRQmwzUTFUUHpiV1pGNHR2ak5WNmR5VEFOQmdrcWhraUc5dzBCQVFzRkFEQWEKTVJnd0ZnWURWUVFERXc5a1lYQnlMWGRsWW1odmIyc3RZMkV3SGhjTk1qTXdNakUxTVRJMU9ESTNXaGNOTXpNdwpNakV5TVRJMU9ESTNXakFYTVJVd0V3WURWUVFERXd4a1lYQnlMWGRsWW1odmIyc3dnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRGNxVDA0K0s1TUhZNElldlJZNXI1NjRzZUpoOG8yRC9yZ2g0NzcKOGxpaGtWV25aaElZZWUxeXE3Vk5ORUtUTHhTek1jL3pqVDU2SWpHd0o5VllROGJUck8zYXBzRzhkRjJsbTRCagpFRDRTTnRUa2dwNzdzN0lkcVM0NzNmQXZ1TmMzWnhmTFpQbzU4R081aGxnbDlTT29yN3Z5ZmtzZjUvbFBtYWhiCkthVGNRcVI0REx5dHNmbW10b2xMSDg4VTFSRGRQUnd3a2xoTXY4K2VHL1NuWVBPc1lpM0l4ZGtCL29EQU5CdXUKMkhpM2hvSktuM1dYcmllMG5vVFZtczF3aGEzdithN1Z4QitsUE9kTzFZWjVuOWcxUmNtc3hsMEUwVHQyZUt5Sgo0amhXYXYycWFWSllyOXZsMU5WZkl3YURXOFh0UUg2RHBndlI5WkFYTi81UEdrTjdBZ01CQUFHamdma3dnZll3CkRnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU0KQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGQWNlaDM3QUVyYmU4TmRnaHNaQngzMGUrMkNVTUlHVgpCZ05WSFJFRWdZMHdnWXFDR0dSaGNISXRkMlZpYUc5dmF5NWtZWEJ5TFhONWMzUmxiWUljWkdGd2NpMTNaV0pvCmIyOXJMbVJoY0hJdGMzbHpkR1Z0TG5OMlk0SWtaR0Z3Y2kxM1pXSm9iMjlyTG1SaGNISXRjM2x6ZEdWdExuTjIKWXk1amJIVnpkR1Z5Z2lwa1lYQnlMWGRsWW1odmIyc3VaR0Z3Y2kxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdQpiRzlqWVd3d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFISnN3TzNYRW02dHFqZm45Y2lncmsrRWFHU01yb2ZmCjJMeWIvU1JUb3JtMC8zR0V6ZzNRSE1KVFJhdUR5d2o2QU1TR0ZzYkc4Q1BCYWQzZ29YOEtpT0VmaS9BaS82bXIKVnEwdDRxY0s5Zmx3SS9WbGgvdE5EUkt0ZG9JWkkvRG1PYVA4WVNVZmtReVM1NkJ4T1VaeXBycWkvUXZSeEtCWgozak1yMi9nQXpCY2gwa0lDTEliZzF4QTY2aFFxUFVIM1FXQy93TW9Pd0RQeHdlNE82TDY0RTdhOUNKNEdYMkYxCmpnc2VNNVAraklJRW5FcklrdEJhYnBIQ3pDZHVzT3EvNWdGY0Z5VkJ0Nkhib3N4NTd0WDBNRXJQcWxLMGZwYlUKemNHa3hxbWEvaTNRZmZLSlNQVFlkWnZsNzdjWGhNell3YkFWUnUra3gwSkxCV1VTVklHSlorQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM0trOU9QaXVUQjJPQ0hyMFdPYStldUxIaVlmS05nLzY0SWVPKy9KWW9aRlZwMllTCkdIbnRjcXUxVFRSQ2t5OFVzekhQODQwK2VpSXhzQ2ZWV0VQRzA2enQycWJCdkhSZHBadUFZeEErRWpiVTVJS2UKKzdPeUhha3VPOTN3TDdqWE4yY1h5MlQ2T2ZCanVZWllKZlVqcUsrNzhuNUxIK2Y1VDVtb1d5bWszRUtrZUF5OApyYkg1cHJhSlN4L1BGTlVRM1QwY01KSllUTC9Qbmh2MHAyRHpyR0l0eU1YWkFmNkF3RFFicnRoNHQ0YUNTcDkxCmw2NG50SjZFMVpyTmNJV3Q3L211MWNRZnBUem5UdFdHZVovWU5VWEpyTVpkQk5FN2RuaXNpZUk0Vm1yOXFtbFMKV0svYjVkVFZYeU1HZzF2RjdVQitnNllMMGZXUUZ6ZitUeHBEZXdJREFRQUJBb0lCQUJMZVZlSGRRZW80VE1Eawo0cWdIY3hwRzhoRU1qM24zKzlmZlA1YkRybGlDZVBTTGdkaWQ5SFB0d3Q4TExQWXcvSEFtUGtYeE9mcHZtaGdhCkQrQXdTM3dtT1dDTkNkdjNoMXAxNVpDUy92dkh2SVNkdHNLSEp4L3FLNDNxK0hMY04yc0JZY04rcXZieFcxV3QKNnpPenRvemlHZ3d1U0hZOSs4K1dzQks3aU9GY21NVUZsOUVZdjRPV2NqOEU2MUFnR2tFVFNKUEwwMjlGUS9hSwp0WXZaVXUzS3hnblJic0E1U0RPYi9ISDJ3Qzd5L2pSNFdKb29PWDNSa1hjd1ZPaklNSE5aTU5LZU5BdHp1L0JUCkFSaVh5aHVKbUxYM1NKcUh5bUR4QWxic29CUldyMDd2ZkF6ZWNxdnZoMU9oelBqZnV1Rkg3bkRJUHM5bVdmS2IKMHpmMzVxRUNnWUVBKzZsQm1zNWhiekVRZFNmR2pqK2dVYkxuUys1bGJPaEZrQVNjNnVKcW1oMHNTQVI0djA3eQovWW9WUDU3aXlPZTBnZmNxeldSYjZ3SmQwNVZCbkw0WERXN3ZJQW43b1pzTldNcmorTkN6dWFjY3Z4Rm1GWU0rCjB5NXNDbE1ZdkNFT2FoeHdoeEV6YzBkdysyVFRObWk0aGNUc0dmMFVRbWJBb2l3ODRwbFJ0bmNDZ1lFQTRIY28KMVMvZkNpdU9Ec1dsNUZOUWFaaHkrV245ejZqSkNlTURWQVd5K3NQQ0RuemhGVDBBaDQ1ZWNpeXZQU29mK1FxZApMR0ZVb090OU5TVTVCcDUyK2VEbDBtbmkzYmFCejc4RE5vU0U4Q3hxUTNSMG9KZ0hmbHVoQ2w4SXdRMW1wSGxnCi9wdjVhaWVFYVJkUVZWOVBrclFyZVlHeUplVUlTRkxmRVUzYUtCMENnWUErRThReEVaT0xRQWtWUFJpSFlqNkQKcUtQUllSNzN2RnZjYUtia2NiRm1EcWdybzU2OVloWWlZSHRaVkRJUTZNYm9BRFk0ci9iVWc2THRYRFh4R2hySgpuNEd3MzRXSW1aeXpPR2ovcVV1TUVpTFBKdFdOblBCVVczRWZJdHhKRzhaWWVtZHZpZGl0S1FRL251RlMzSVlYCnlUbU1ONWRWd2M3bXNnN2F2b01maFFLQmdFSnN3TmFsdmZsQ2ZsMTh1K1RmaXRKVTNPRldMbGYvZU03R01UdnkKRzg3OWt6VzZXdGx3SGZIL2ZZK0lEYXVxQmFBck5ldm1PYWNOU1JZckY3OFBzZUdzWGhad1kwUjlOOWtFaTZ6Ywpkb0trZ2lYSUZxTlhtaEFZaVlXS0xnc0RMamJKL0p3Y0NDa1QzS2xFenU4VXIzV1lmNjBMWm02MFlra1V6UkpQCjJaazVBb0dCQUoxQUZXaFBraVBxOTdBRCs4UEZnejVGZDBsNFFLb1FHc2tXT2w0YStva042a2ZEbmdKNTk2bU8KZno2OGdNVUxINVY0QWtqZUVWY2t2T2ozQ0FxVTc1eG5nWEtvcUZxUkcyK1R3dThacktJKzRJRk5mODdOUkhyNQpBVks5azNaM3lOaUtqc0hmZ0RhMjgxWUhtd3RycVVHamJ1ZDRvaXRoQjI2SDlDU3c2U2FvCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        kind: Secret
        metadata:
          labels:
            app: dapr-operator
            app.kubernetes.io/component: operator
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-webhook-cert
          namespace: dapr-system
      - apiVersion: v1
        data:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJRENDQWdpZ0F3SUJBZ0lSQUxjODNLblFDekFTM0FpOFVZWHpSaTR3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQXhNUFpHRndjaTEzWldKb2IyOXJMV05oTUI0WERUSXpNREl4TlRFeU5UZ3lObG9YRFRNegpNREl4TWpFeU5UZ3lObG93R2pFWU1CWUdBMVVFQXhNUFpHRndjaTEzWldKb2IyOXJMV05oTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMGNYWkJnTndhMURUay9lQUNKdDJFdW0yek95eWNOZkkKVmo3V1dPWGpIRkowTkI4UU1rRFFiS2RvaFFZMFp2MmRZTXZnWWU4VThoUVJOMEkzZ1hUSW4yWEQ3OGgrRzdyTApNZENCcHQvZkxRcWJKM0RuQUptRzUraEN2MkJGaE00L1lFTktZdmtOcVpFNy81RFlSYVVSRHNEQ3E2ODgrYWJMCnZ2Y2ZMelNmcEZwMW1aUEFzMTB3UXhKeHVodTEyNFpHMEJtKytMSzFiY204WFVJTENQN2dLVFdLYmtERXp2VXEKRWs0ZGovM0xSR2dmQUpOeTFna0picGtPWEcrK1pVemtPdzNwSnVhdllrZkg2RUxVVTFQbXc1R0RxUW95emN4UQpXc2JhWllYQjljVTY5V2ZFSHdYdTJDUURvSTJLb2lpNExaYXEwUW14UDgvTzFXam4rMGFxSVFJREFRQUJvMkV3Clh6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkFjZWgzN0FFcmJlOE5kZ2hzWkJ4MzBlKzJDVQpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUI3QXNMZ3dqamVqdnJGdjlyMm42NzBLODA1RmNUYXdsNlVyRjFzCkx0VW11ODFFODZNcHBJQ1c5bThGbGZncWxqSDJUS2FhSWpVMUp2Wlh2azVoWXVwbjlVSTh5MWJYdUd2a1pEdEIKY1c5STZoVWF5VUJkRkIzSmlQU1lBR1pHemc2ZXdlV1VTeWo1bkdTYm54YXV0UUljbHNsY0d6T0dmMjBnT3Y1bwpWK2lsK1RQVnI2UTVOVWRjOVlNdWd5Z0lDaVBJVUVBNGJJUmNSOG10OXg2T05lQk0vbXlOdFJWcld5OS80dXFVClJncEtReHRVbVA3RStaVEpIdGJrSDlPNElVREs2NWMvaC95RG1RaTdOVmZ2TzlRVVFrekxqbm1mYW14TVJvUHkKKzBodVNQdkh1MjV5ZXgzdXM1NTJqUXRJcm9LS2Z1eHYwYnJlOGhITjFhUlBoa2JECi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        kind: Secret
        metadata:
          labels:
            app: dapr-operator
            app.kubernetes.io/component: operator
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-webhook-ca
          namespace: dapr-system
      - apiVersion: v1
        data: null
        kind: Secret
        metadata:
          labels:
            app: dapr-sentry
            app.kubernetes.io/component: sentry
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-trust-bundle
          namespace: dapr-system
      - apiVersion: v1
        data:
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ3VENDQXRXZ0F3SUJBZ0lRR1M5OERHTDU4amh0cDgvNHVLSnlnVEFOQmdrcWhraUc5dzBCQVFzRkFEQWoKTVNFd0h3WURWUVFERXhoa1lYQnlMWE5wWkdWallYSXRhVzVxWldOMGIzSXRZMkV3SGhjTk1qTXdNakUxTVRJMQpPREkyV2hjTk16TXdNakV5TVRJMU9ESTJXakFnTVI0d0hBWURWUVFERXhWa1lYQnlMWE5wWkdWallYSXRhVzVxClpXTjBiM0l3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQytOY2R0YkdHcGdNd28KZE5tUFpmRytPNDkzMGNZYnd6UWsrN0oxUUlscXkvd21hOWp3REk1Y3YyNDJReVZPdHViMXlTZXpXTUVEdDFpSwpVNEFMRjdMaURLR2VMTElaSGlKSUZCRnhMbjlTcmJNN3V3UThDUURaOGRYUlhzUjNQSlFxR1hMUEpVK0xhbHMrClY2UTBodkpWNE4xWnhZK1FRWWFJcEZmcExFcFYyL2tqdmxmSVREQXFxY01JQ2FGSDJBbE85VjR0WmQwV3orRVcKNThuaHJJdDZCRnhxK3duazd0WXpCSHBVS05KTllBTmszY2dPVDdBQlg2UVlUUGhJbUpmNGNyK0hTNE4yclNlQgpXTGRRdGlEQzZkdHFFVWNsMHhQVEFINldNOFRCQWRSSWhiM3dDQ3l0ejRQZk5YR3ZiRWxFdFpZWFc2NUtzaTNXCkJGVlQ4eGNYQWdNQkFBR2pnZ0VlTUlJQkdqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVYlNPMwpvSjhFdTdpNmc0L0E5ZittVE05UHQ2OHdnYmtHQTFVZEVRU0JzVENCcm9JaFpHRndjaTF6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TG1SaGNISXRjM2x6ZEdWdGdpVmtZWEJ5TFhOcFpHVmpZWEl0YVc1cVpXTjBiM0l1WkdGd2NpMXoKZVhOMFpXMHVjM1pqZ2kxa1lYQnlMWE5wWkdWallYSXRhVzVxWldOMGIzSXVaR0Z3Y2kxemVYTjBaVzB1YzNaagpMbU5zZFhOMFpYS0NNMlJoY0hJdGMybGtaV05oY2kxcGJtcGxZM1J2Y2k1a1lYQnlMWE41YzNSbGJTNXpkbU11ClkyeDFjM1JsY2k1c2IyTmhiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBc0dwNFgwWXY1Tnd6M2FzQ09JVVoKUjA2NnkzdFJvWWJzTldIQUdvcHhERzA4YkozWDN6allwcmhPQlc0eG01NFpNTUZwbnNlTG41bFRBN3NMamQ2YQpCU0NVQ0FVVjcyQlJmZXJ5UmdNOE5hSHZESlBqMGNsK1NmeCs2SGZCVG01L3VzTFVORlFtd2RNN0ZZREFLc0NxCk4rZHVaaUF0b2xmUTBEMjBlOW8zVi9NdzdMUkFidG92VWQxNCtWaTFLa2M0MndJQU9EV1pVRS84Z0ZEdlRuRjQKRXlYcTFzSlhJY1JHQjJNVENNZXU5cUw1Mm1KanBjR2tQUjUzbzVSMG4xeEhkVWdxMGlid2lNNE9OcTVITDNUNgphUm9HYlkxSU1MNllHYnJxSGhhUTM2YzZUQ2dpbFJrSHk4bjMzeEFlU2RjT05jcUxwUnI4UjFpZ0ZpYzN6bExaCkN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdmpYSGJXeGhxWURNS0hUWmoyWHh2anVQZDlIR0c4TTBKUHV5ZFVDSmFzdjhKbXZZCjhBeU9YTDl1TmtNbFRyYm05Y2tuczFqQkE3ZFlpbE9BQ3hleTRneWhuaXl5R1I0aVNCUVJjUzUvVXEyek83c0UKUEFrQTJmSFYwVjdFZHp5VUtobHl6eVZQaTJwYlBsZWtOSWJ5VmVEZFdjV1BrRUdHaUtSWDZTeEtWZHY1STc1WAp5RXd3S3FuRENBbWhSOWdKVHZWZUxXWGRGcy9oRnVmSjRheUxlZ1JjYXZzSjVPN1dNd1I2VkNqU1RXQURaTjNJCkRrK3dBVitrR0V6NFNKaVgrSEsvaDB1RGRxMG5nVmkzVUxZZ3d1bmJhaEZISmRNVDB3QitsalBFd1FIVVNJVzkKOEFnc3JjK0QzelZ4cjJ4SlJMV1dGMXV1U3JJdDFnUlZVL01YRndJREFRQUJBb0lCQUZFUzN5UVcxREhKZ2p1awpRcTlLaHBYTkVVUERHQ3Z4TWlLcFhkRjRacG9zeEJja1ZOMU1uTW1QbHN4dUpsSzh4d2p3YW9tWlJQdnVoRURCCmdvdzMxN2xlSk8wa28renMyVFBieWV0eUpEYjdickFBOExjZUoweStOYUwrUDhPTEFLUkpJSlNHbExjWjZEWlUKYU5zeXdjdzFBbVFuUHgvL3JmWkVCbXlPd2tpQnREcDJEU3hUUzlyR3l2SmlqT0xqVVF1bWU0dGZCMU56Q2ZWZgo1TmFmM0U4UVh4WHlkVGZNWjlBNmZ3SFdRc2NDN0F5dC9CeWJmcHFQKzRFMEdhMkY4Rm42dTBDRVdlbXFKMkdUCmNQMUpibTJ6VHpQQnkrVUtxTk4xY0dNQkZGSG0wUmVJRjNYcUVvV05jK3JRalFJZE5XbmJMQTRFM1RTaXJUSmMKTnVVWGQ3RUNnWUVBMnBHZURyRkNNQkhsd3R5TnI0N2FtMXZITHUzbTBMWXVCT1FSNGlpa1dzN2FQQ0xoTm9BRwpSeEFkcGtYQm5IVnR1MUthODdTSFBmQWxBTFoxTmhkSkh0ZWp0VlVjejVWV040RVpWMmJFcDlrVzltVTFSbDlCCkd1TnVFUmtWOFFPMEp5WnIvUEwyUGlNai93aUEvZktUZ09FWTFrcVdqK200YXRFU29HTnIxdXNDZ1lFQTNzamYKUFZIQ3Q3SmtoeUlhdDB1UWdGZmlRVmNMTDFPS3hXbDFCRHppUWsrV1NKN2tlbG1WcVRaclRHYWdnRHFkSFp0YwpiWUJ4T2JsRFlXZlNWK3pNNnR3ZTBIZUJpNkU1ZEh3Z0M1ekxBS1dmMG14MnJ4Z2xxd1M5VE9vSUpuTHFESzI4CjMwU1RUOGV2N0RZYVJWZFNLVVFaZW5OZkZyUWQzdzJWSGExbmpZVUNnWUVBZ0o2TWFvejVMQng4SHExM1cwWXYKY3BrUm41WXo2OElwVm90MzBxU2tBeVFTM0t5UjUyWnpTMEk2a0d3Z1FSZ0JXT2lGY3NCYmphRlJ4UmVaNWhqUgoyS3FCRmVaZUsvSHZhSDQ2RVdyU2N3dVhMYXZsSytKR0I3S3FSTG1FWmU0T0I3UGVmRjNsZGk5cnNWcXB2Y2NQCjhobUVhaVkrYjdYVDVsZmVKREFkZDcwQ2dZRUF0c2pFTUVGR3F3VFlhZTdYVUkvVTdSZ3Q4RUlFVVQ0UDIweGMKejY5TVMrK1VjOXk1eEpCL3RDZUwvVkV1V2thODVhKzBNN3R3S2xZUUxIak1JWXVOelJ2d3hFVm9xakVMUE1FaQpZYVN4QWNUaHpmbGpudUVHOXJ1YXZPSSs4WnpTM3JnbEFHSDVJem5JNHRxNHp5K0huNGZhQjVkazZ2RzRtR3RDCmJ1ajR6eWtDZ1lCcHh3aHF1ZGYweVBzNy9vbTltYkt1OGNqbHMxOTZtSEpOWDgxQyt4NkQwbUhZMUVvSDFTb2cKRVRISTh2dFFiUGFGR3RPQ1FsVlZ0eXZRVkg5OFNja2QvbkZ0Z2ZzK1V6UVNPTCsydHd1QzJLeFE2N0NHbnVSVQoybnlvQzZuakcxWmJ1dHdpL1FpblVBNC94ZEdVYkp3SS9IRStPbjFyYyt2RHE1Y1FibUpEY1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        kind: Secret
        metadata:
          labels:
            app: dapr-sidecar-injector
            app.kubernetes.io/component: sidecar-injector
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-sidecar-injector-cert
          namespace: dapr-system
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/component: rbac
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-operator-admin
          namespace: dapr-system
        rules:
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - patch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - get
          - list
        - apiGroups:
          - apps
          resources:
          - deployments
          - deployments/finalizers
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - apps
          resources:
          - statefulsets
          - statefulsets/finalizers
          verbs:
          - get
          - list
          - watch
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          verbs:
          - get
          - list
          - watch
          - update
          - create
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - dapr.io
          resources:
          - components
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - dapr.io
          resources:
          - pluggablecomponents
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - dapr.io
          resources:
          - configurations
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - dapr.io
          resources:
          - subscriptions
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - dapr.io
          resources:
          - resiliencies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - update
          - create
          - delete
        - apiGroups:
          - ""
          - events.k8s.io
          resources:
          - events
          verbs:
          - create
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/component: rbac
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dashboard-reader
          namespace: dapr-system
        rules:
        - apiGroups:
          - ""
          - dapr.io
          - apps
          - extensions
          resources:
          - deployments
          - pods
          - pods/log
          - components
          - configurations
          - namespaces
          - pluggablecomponents
          verbs:
          - get
          - list
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/component: rbac
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-operator
          namespace: dapr-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: dapr-operator-admin
        subjects:
        - kind: ServiceAccount
          name: dapr-operator
          namespace: dapr-system
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/component: rbac
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-role-tokenreview-binding
          namespace: dapr-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: system:auth-delegator
        subjects:
        - kind: ServiceAccount
          name: dapr-operator
          namespace: dapr-system
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/component: rbac
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dashboard-reader-global
          namespace: dapr-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: dashboard-reader
        subjects:
        - kind: ServiceAccount
          name: dashboard-reader
          namespace: dapr-system
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/component: rbac
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: secret-reader
          namespace: dapr-system
        rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/component: rbac
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-secret-reader
          namespace: dapr-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: secret-reader
        subjects:
        - kind: ServiceAccount
          name: default
      - apiVersion: v1
        kind: Service
        metadata:
          annotations: null
          labels:
            app.kubernetes.io/component: dashboard
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-dashboard
          namespace: dapr-system
        spec:
          ports:
          - port: 8080
            protocol: TCP
            targetPort: 8080
          selector:
            app: dapr-dashboard
          type: ClusterIP
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/component: operator
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-api
          namespace: dapr-system
        spec:
          ports:
          - port: 80
            protocol: TCP
            targetPort: 6500
          selector:
            app: dapr-operator
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/component: operator
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-webhook
          namespace: dapr-system
        spec:
          ports:
          - port: 443
            protocol: TCP
            targetPort: 19443
          selector:
            app: dapr-operator
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app: dapr-placement-server
            app.kubernetes.io/component: placement
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-placement-server
          namespace: dapr-system
        spec:
          clusterIP: None
          ports:
          - name: api
            port: 50005
          - name: raft-node
            port: 8201
          publishNotReadyAddresses: true
          selector:
            app: dapr-placement-server
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/component: sentry
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-sentry
          namespace: dapr-system
        spec:
          ports:
          - port: 80
            protocol: TCP
            targetPort: 50001
          selector:
            app: dapr-sentry
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/component: sidecar-injector
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-sidecar-injector
          namespace: dapr-system
        spec:
          ports:
          - name: https
            port: 443
            protocol: TCP
            targetPort: https
          selector:
            app: dapr-sidecar-injector
          type: ClusterIP
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app: dapr-dashboard
            app.kubernetes.io/component: dashboard
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-dashboard
          namespace: dapr-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: dapr-dashboard
          template:
            metadata:
              labels:
                app: dapr-dashboard
                app.kubernetes.io/component: dashboard
                app.kubernetes.io/managed-by: helm
                app.kubernetes.io/name: dapr
                app.kubernetes.io/part-of: dapr
                app.kubernetes.io/version: 1.9.6
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: docker.io/daprio/dashboard:0.11.0
                imagePullPolicy: IfNotPresent
                name: dapr-dashboard
                ports:
                - containerPort: 8080
                resources: {}
                securityContext:
                  runAsNonRoot: true
              serviceAccountName: dashboard-reader
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app: dapr-operator
            app.kubernetes.io/component: operator
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-operator
          namespace: dapr-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: dapr-operator
          template:
            metadata:
              annotations:
                prometheus.io/path: /
                prometheus.io/port: "9090"
                prometheus.io/scrape: "true"
              labels:
                app: dapr-operator
                app.kubernetes.io/component: operator
                app.kubernetes.io/managed-by: helm
                app.kubernetes.io/name: dapr
                app.kubernetes.io/part-of: dapr
                app.kubernetes.io/version: 1.9.6
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --watch-interval
                - "0"
                - --max-pod-restarts-per-minute
                - "20"
                - --log-level
                - info
                - --enable-metrics
                - --metrics-port
                - "9090"
                command:
                - /operator
                env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: docker.io/daprio/dapr:1.9.6
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /healthz
                    port: 8080
                  initialDelaySeconds: 3
                  periodSeconds: 3
                name: dapr-operator
                ports:
                - containerPort: 6500
                - containerPort: 9090
                  name: metrics
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /healthz
                    port: 8080
                  initialDelaySeconds: 3
                  periodSeconds: 3
                resources: {}
                securityContext:
                  runAsNonRoot: true
                volumeMounts:
                - mountPath: /var/run/dapr/credentials
                  name: credentials
                  readOnly: true
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: webhook-creds
                  readOnly: true
              serviceAccountName: dapr-operator
              volumes:
              - name: credentials
                secret:
                  secretName: dapr-trust-bundle
              - name: webhook-creds
                secret:
                  secretName: dapr-webhook-cert
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app: dapr-sentry
            app.kubernetes.io/component: sentry
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-sentry
          namespace: dapr-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: dapr-sentry
          template:
            metadata:
              annotations:
                prometheus.io/path: /
                prometheus.io/port: "9090"
                prometheus.io/scrape: "true"
              labels:
                app: dapr-sentry
                app.kubernetes.io/component: sentry
                app.kubernetes.io/managed-by: helm
                app.kubernetes.io/name: dapr
                app.kubernetes.io/part-of: dapr
                app.kubernetes.io/version: 1.9.6
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --log-level
                - info
                - --enable-metrics
                - --metrics-port
                - "9090"
                - --trust-domain
                - cluster.local
                command:
                - /sentry
                env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: docker.io/daprio/dapr:1.9.6
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /healthz
                    port: 8080
                  initialDelaySeconds: 3
                  periodSeconds: 3
                name: dapr-sentry
                ports:
                - containerPort: 50001
                - containerPort: 9090
                  name: metrics
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /healthz
                    port: 8080
                  initialDelaySeconds: 3
                  periodSeconds: 3
                resources: {}
                securityContext:
                  runAsNonRoot: true
                volumeMounts:
                - mountPath: /var/run/dapr/credentials
                  name: credentials
                  readOnly: true
              serviceAccountName: dapr-operator
              volumes:
              - name: credentials
                secret:
                  secretName: dapr-trust-bundle
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app: dapr-sidecar-injector
            app.kubernetes.io/component: sidecar-injector
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-sidecar-injector
          namespace: dapr-system
        spec:
          selector:
            matchLabels:
              app: dapr-sidecar-injector
          template:
            metadata:
              annotations:
                prometheus.io/path: /
                prometheus.io/port: "9090"
                prometheus.io/scrape: "true"
              labels:
                app: dapr-sidecar-injector
                app.kubernetes.io/component: sidecar-injector
                app.kubernetes.io/managed-by: helm
                app.kubernetes.io/name: dapr
                app.kubernetes.io/part-of: dapr
                app.kubernetes.io/version: 1.9.6
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --log-level
                - info
                - --enable-metrics
                - --metrics-port
                - "9090"
                - --healthz-port
                - "8080"
                command:
                - /injector
                env:
                - name: TLS_CERT_FILE
                  value: /dapr/cert/tls.crt
                - name: TLS_KEY_FILE
                  value: /dapr/cert/tls.key
                - name: KUBE_CLUSTER_DOMAIN
                  value: cluster.local
                - name: SIDECAR_IMAGE
                  value: docker.io/daprio/daprd:1.9.6
                - name: SIDECAR_IMAGE_PULL_POLICY
                  value: IfNotPresent
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: IGNORE_ENTRYPOINT_TOLERATIONS
                  value: '[{"effect":"NoSchedule","key":"alibabacloud.com/eci"},{"effect":"NoSchedule","key":"azure.com/aci"},{"effect":"NoSchedule","key":"aws"},{"effect":"NoSchedule","key":"huawei.com/cci"}]'
                image: docker.io/daprio/dapr:1.9.6
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /healthz
                    port: 8080
                  initialDelaySeconds: 3
                  periodSeconds: 3
                name: dapr-sidecar-injector
                ports:
                - containerPort: 4000
                  name: https
                  protocol: TCP
                - containerPort: 9090
                  name: metrics
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /healthz
                    port: 8080
                  initialDelaySeconds: 3
                  periodSeconds: 3
                resources: {}
                securityContext:
                  runAsNonRoot: true
                volumeMounts:
                - mountPath: /dapr/cert
                  name: cert
                  readOnly: true
              serviceAccountName: dapr-operator
              volumes:
              - name: cert
                secret:
                  secretName: dapr-sidecar-injector-cert
      - apiVersion: apps/v1
        kind: StatefulSet
        metadata:
          labels:
            app: dapr-placement-server
            app.kubernetes.io/component: placement
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-placement-server
          namespace: dapr-system
        spec:
          podManagementPolicy: Parallel
          replicas: 1
          selector:
            matchLabels:
              app: dapr-placement-server
          serviceName: dapr-placement-server
          template:
            metadata:
              annotations:
                prometheus.io/path: /
                prometheus.io/port: "9090"
                prometheus.io/scrape: "true"
              labels:
                app: dapr-placement-server
                app.kubernetes.io/component: placement
                app.kubernetes.io/managed-by: helm
                app.kubernetes.io/name: dapr
                app.kubernetes.io/part-of: dapr
                app.kubernetes.io/version: 1.9.6
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --log-level
                - info
                - --enable-metrics
                - --replicationFactor
                - "100"
                - --metrics-port
                - "9090"
                - --tls-enabled
                command:
                - /placement
                env:
                - name: PLACEMENT_ID
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: docker.io/daprio/dapr:1.9.6
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /healthz
                    port: 8080
                  initialDelaySeconds: 10
                  periodSeconds: 3
                name: dapr-placement-server
                ports:
                - containerPort: 50005
                  name: api
                - containerPort: 8201
                  name: raft-node
                - containerPort: 9090
                  name: metrics
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /healthz
                    port: 8080
                  initialDelaySeconds: 3
                  periodSeconds: 3
                resources: {}
                securityContext:
                  runAsUser: 0
                volumeMounts:
                - mountPath: /var/run/dapr/credentials
                  name: credentials
                  readOnly: true
              serviceAccountName: dapr-operator
              volumes:
              - name: credentials
                secret:
                  secretName: dapr-trust-bundle
      - apiVersion: dapr.io/v1alpha1
        kind: Configuration
        metadata:
          labels:
            app.kubernetes.io/component: config
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: daprsystem
          namespace: dapr-system
        spec:
          mtls:
            allowedClockSkew: 15m
            enabled: true
            workloadCertTTL: 24h
      - apiVersion: admissionregistration.k8s.io/v1
        kind: MutatingWebhookConfiguration
        metadata:
          labels:
            app: dapr-sidecar-injector
            app.kubernetes.io/component: sidecar-injector
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: dapr
            app.kubernetes.io/part-of: dapr
            app.kubernetes.io/version: 1.9.6
          name: dapr-sidecar-injector
          namespace: dapr-system
        webhooks:
        - admissionReviewVersions:
          - v1
          - v1beta1
          clientConfig:
            caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lSQUxjYUhVc2tHMjhUWkZ1bnNTc0V0S0l3RFFZSktvWklodmNOQVFFTEJRQXcKSXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1YW1WamRHOXlMV05oTUI0WERUSXpNREl4TlRFeQpOVGd5TmxvWERUTXpNREl4TWpFeU5UZ3lObG93SXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TFdOaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMyt3bnJibkEKRHRScXZ2NkdtOGZKK0QyeU1CZUM0RVJXaXRNL3dHKzZjN3VOY1ZRUDNOdjlZdStZdzBXVmVGSHVsdmwwWlBRTgpoWkJ2ZldzN2FjYkdxWjIzcG9IMUVLYXhrUkxtaGVOZGt6T21tKzJDcjVnL1VSajU5MFUwWDFUbTRTMmpELzBQCjgrR1hVd0s0MEg0Nlg4SG4veE5FWXBZUC9DVEFWUEltTG9qaDlBanhKVEdFV2xIbEVRTXFqWmw1cWtzajNsdlYKSXhUMlBaSWJuSlB1c0hWdFJjbFpEbTFQNzczVlF0WFp2L1UxMC9jZHNvemNINnNWek5RK1A2MDk0MUdxMWkxZQpCZ0ovMjN1M2RxVmIyWDI2NWwrcnVFM0VMaHhzYWdaeCs5RytEdFYraUp0MFNOOUhEcW5rT3M4aStFWDZUYjRKCmFVT0hLc1RPbHgvZ1ZRSURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkcwagp0NkNmQkx1NHVvT1B3UFgvcGt6UFQ3ZXZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUI4cnZiYk1XRFZkeFRICjdwWjVvUm51a3AxeDVmVUl5OWVXNEx0OWR5cC9CSHNNMnE3RE9jaGZWbGJjMkIrdEpLTnlIOWpqNFU1SmliTjgKTXFzODJjaGgwLzZTbldwLzlkWXljMlpiMjEvdWg3MmsyMm5QK3hYbVk1TFY0Mm91dGpDMmY0WG5kVCtaNmxUdgpZVmJaYVk0M0FzeEUvdkNiT2prL3dSMkNvQjhlUjltbnhyYkN5NE5Xbk1aR1F0anE5MTJNZ1Y1dHpCY1ZjVnY5Cmx2dWV4NS9CS1ZhVXB0cDV2b1p3emlyQm5rTTNrRXREZnJ3VG12VXpNa2dINVJZcWNsczg5NDIwN24zZjBIQngKVC9vTi85SzZ1bDliZGlEVUlrQmpSTVAreWNGaEplRktvbnVYSWxBam5yWU1QQWkrL0pQSzBLR21YaGoyWUx6QQozem1oMEtvMwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
            service:
              name: dapr-sidecar-injector
              namespace: dapr-system
              path: /mutate
          failurePolicy: Ignore
          name: sidecar-injector.dapr.io
          rules:
          - apiGroups:
            - ""
            apiVersions:
            - v1
            operations:
            - CREATE
            resources:
            - pods
          sideEffects: None
      - apiVersion: v1
        kind: Namespace
        metadata:
          name: dapr-system
          namespace: dapr-system
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: redis
      namespace: default
    spec:
      workerClusterResources:
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app: redisoperator
          name: redisoperator
          namespace: default
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: redisoperator
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app: redisoperator
            spec:
              containers:
              - image: quay.io/spotahome/redis-operator:v1.1.0
                imagePullPolicy: IfNotPresent
                name: app
                resources:
                  limits:
                    cpu: 100m
                    memory: 50Mi
                  requests:
                    cpu: 10m
                    memory: 50Mi
                securityContext:
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  runAsUser: 1000
              restartPolicy: Always
              serviceAccountName: redisoperator
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: redisoperator
          namespace: default
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: redisoperator
        subjects:
        - kind: ServiceAccount
          name: redisoperator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: redisoperator
          namespace: default
        rules:
        - apiGroups:
          - databases.spotahome.com
          resources:
          - redisfailovers
          - redisfailovers/finalizers
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - events
          - configmaps
          - persistentvolumeclaims
          - persistentvolumeclaims/finalizers
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: redisoperator
          namespace: default
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          creationTimestamp: null
          name: redisfailovers.databases.spotahome.com
        spec:
          group: databases.spotahome.com
          names:
            kind: RedisFailover
            listKind: RedisFailoverList
            plural: redisfailovers
            shortNames:
            - rf
            singular: redisfailover
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .metadata.name
              name: NAME
              type: string
            - jsonPath: .spec.redis.replicas
              name: REDIS
              type: integer
            - jsonPath: .spec.sentinel.replicas
              name: SENTINELS
              type: integer
            - jsonPath: .metadata.creationTimestamp
              name: AGE
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                description: RedisFailover represents a Redis failover
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: RedisFailoverSpec represents a Redis failover spec
                    properties:
                      auth:
                        description: AuthSettings contains settings about auth
                        properties:
                          secretPath:
                            type: string
                        type: object
                      bootstrapNode:
                        description: BootstrapSettings contains settings about a potential
                          bootstrap node
                        properties:
                          allowSentinels:
                            type: boolean
                          host:
                            type: string
                          port:
                            type: string
                        type: object
                      labelWhitelist:
                        items:
                          type: string
                        type: array
                      redis:
                        description: RedisSettings defines the specification of the
                          redis cluster
                        properties:
                          affinity:
                            description: Affinity is a group of affinity scheduling
                              rules.
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node matches
                                      the corresponding matchExpressions; the node(s)
                                      with the highest sum are the most preferred.
                                    items:
                                      description: An empty preferred scheduling term
                                        matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling
                                        term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod
                                      from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node has
                                      pods which matches the corresponding podAffinityTerm;
                                      the node(s) with the highest sum are the most
                                      preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to a pod label update),
                                      the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the anti-affinity
                                      expressions specified by this field, but it
                                      may choose a node that violates one or more
                                      of the expressions. The node that is most preferred
                                      is the one with the greatest sum of weights,
                                      i.e. for each node that meets all of the scheduling
                                      requirements (resource request, requiredDuringScheduling
                                      anti-affinity expressions, etc.), compute a
                                      sum by iterating through the elements of this
                                      field and adding "weight" to the sum if the
                                      node has pods which matches the corresponding
                                      podAffinityTerm; the node(s) with the highest
                                      sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the anti-affinity requirements
                                      specified by this field are not met at scheduling
                                      time, the pod will not be scheduled onto the
                                      node. If the anti-affinity requirements specified
                                      by this field cease to be met at some point
                                      during pod execution (e.g. due to a pod label
                                      update), the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                            type: object
                          command:
                            items:
                              type: string
                            type: array
                          customCommandRenames:
                            items:
                              description: RedisCommandRename defines the specification
                                of a "rename-command" configuration option
                              properties:
                                from:
                                  type: string
                                to:
                                  type: string
                              type: object
                            type: array
                          customConfig:
                            items:
                              type: string
                            type: array
                          dnsPolicy:
                            description: DNSPolicy defines how a pod's DNS will be
                              configured.
                            type: string
                          exporter:
                            description: RedisExporter defines the specification for
                              the redis exporter
                            properties:
                              args:
                                items:
                                  type: string
                                type: array
                              enabled:
                                type: boolean
                              env:
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                type: string
                              imagePullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                type: string
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                            type: object
                          hostNetwork:
                            type: boolean
                          image:
                            type: string
                          imagePullPolicy:
                            description: PullPolicy describes a policy for if/when
                              to pull a container image
                            type: string
                          imagePullSecrets:
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          nodeSelector:
                            additionalProperties:
                              type: string
                            type: object
                          podAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          priorityClassName:
                            type: string
                          replicas:
                            format: int32
                            type: integer
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            description: PodSecurityContext holds pod-level security
                              attributes and common container settings. Some fields
                              are also present in container.securityContext.  Field
                              values of container.securityContext take precedence
                              over field values of PodSecurityContext.
                            properties:
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: HostProcess determines if a container
                                      should be run as a 'Host Process' container.
                                      This field is alpha-level and will only be honored
                                      by components that enable the WindowsHostProcessContainers
                                      feature flag. Setting this field without the
                                      feature flag will result in errors when validating
                                      the Pod. All of a Pod's containers must have
                                      the same effective HostProcess value (it is
                                      not allowed to have a mix of HostProcess containers
                                      and non-HostProcess containers).  In addition,
                                      if HostProcess is true then HostNetwork must
                                      also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                          serviceAccountName:
                            type: string
                          serviceAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          shutdownConfigMap:
                            type: string
                          storage:
                            description: RedisStorage defines the structure used to
                              store the Redis Data
                            properties:
                              emptyDir:
                                description: Represents an empty directory for a pod.
                                  Empty directory volumes support ownership management
                                  and SELinux relabeling.
                                properties:
                                  medium:
                                    description: 'What type of storage medium should
                                      back this directory. The default is "" which
                                      means to use the node''s default medium. Must
                                      be an empty string (default) or Memory. More
                                      info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                    type: string
                                  sizeLimit:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Total amount of local storage required
                                      for this EmptyDir volume. The size limit is
                                      also applicable for memory medium. The maximum
                                      usage on memory medium EmptyDir would be the
                                      minimum value between the SizeLimit specified
                                      here and the sum of memory limits of all containers
                                      in a pod. The default is nil which means that
                                      the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                type: object
                              keepAfterDeletion:
                                type: boolean
                              persistentVolumeClaim:
                                description: EmbeddedPersistentVolumeClaim is an embedded
                                  version of k8s.io/api/core/v1.PersistentVolumeClaim.
                                  It contains TypeMeta and a reduced ObjectMeta.
                                properties:
                                  apiVersion:
                                    description: 'APIVersion defines the versioned
                                      schema of this representation of an object.
                                      Servers should convert recognized schemas to
                                      the latest internal value, and may reject unrecognized
                                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                    type: string
                                  kind:
                                    description: 'Kind is a string value representing
                                      the REST resource this object represents. Servers
                                      may infer this from the endpoint the client
                                      submits requests to. Cannot be updated. In CamelCase.
                                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  metadata:
                                    description: EmbeddedMetadata contains metadata
                                      relevant to an EmbeddedResource.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: 'Annotations is an unstructured
                                          key value map stored with a resource that
                                          may be set by external tools to store and
                                          retrieve arbitrary metadata. They are not
                                          queryable and should be preserved when modifying
                                          objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: 'Map of string keys and values
                                          that can be used to organize and categorize
                                          (scope and select) objects. May match selectors
                                          of replication controllers and services.
                                          More info: http://kubernetes.io/docs/user-guide/labels'
                                        type: object
                                      name:
                                        description: 'Name must be unique within a
                                          namespace. Is required when creating resources,
                                          although some resources may allow a client
                                          to request the generation of an appropriate
                                          name automatically. Name is primarily intended
                                          for creation idempotence and configuration
                                          definition. Cannot be updated. More info:
                                          http://kubernetes.io/docs/user-guide/identifiers#names'
                                        type: string
                                    type: object
                                  spec:
                                    description: 'Spec defines the desired characteristics
                                      of a volume requested by a pod author. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'This field can be used to specify
                                          either: * An existing VolumeSnapshot object
                                          (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          If the provisioner or an external controller
                                          can support the specified data source, it
                                          will create a new volume based on the contents
                                          of the specified data source. If the AnyVolumeDataSource
                                          feature gate is enabled, this field will
                                          always have the same contents as the DataSourceRef
                                          field.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      dataSourceRef:
                                        description: 'Specifies the object from which
                                          to populate the volume with data, if a non-empty
                                          volume is desired. This may be any local
                                          object from a non-empty API group (non core
                                          object) or a PersistentVolumeClaim object.
                                          When this field is specified, volume binding
                                          will only succeed if the type of the specified
                                          object matches some installed volume populator
                                          or dynamic provisioner. This field will
                                          replace the functionality of the DataSource
                                          field and as such if both fields are non-empty,
                                          they must have the same value. For backwards
                                          compatibility, both fields (DataSource and
                                          DataSourceRef) will be set to the same value
                                          automatically if one of them is empty and
                                          the other is non-empty. There are two important
                                          differences between DataSource and DataSourceRef:
                                          * While DataSource only allows two specific
                                          types of objects, DataSourceRef   allows
                                          any non-core object, as well as PersistentVolumeClaim
                                          objects. * While DataSource ignores disallowed
                                          values (dropping them), DataSourceRef   preserves
                                          all values, and generates an error if a
                                          disallowed value is   specified. (Alpha)
                                          Using this field requires the AnyVolumeDataSource
                                          feature gate to be enabled.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      resources:
                                        description: 'Resources represents the minimum
                                          resources the volume should have. More info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: A label query over volumes to
                                          consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      storageClassName:
                                        description: 'Name of the StorageClass required
                                          by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type
                                          of volume is required by the claim. Value
                                          of Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: VolumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                  status:
                                    description: 'Status represents the current information/status
                                      of a persistent volume claim. Read-only. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the actual
                                          access modes the volume backing the PVC
                                          has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      capacity:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: Represents the actual resources
                                          of the underlying volume.
                                        type: object
                                      conditions:
                                        description: Current Condition of persistent
                                          volume claim. If underlying persistent volume
                                          is being resized then the Condition will
                                          be set to 'ResizeStarted'.
                                        items:
                                          description: PersistentVolumeClaimCondition
                                            contails details about state of pvc
                                          properties:
                                            lastProbeTime:
                                              description: Last time we probed the
                                                condition.
                                              format: date-time
                                              type: string
                                            lastTransitionTime:
                                              description: Last time the condition
                                                transitioned from one status to another.
                                              format: date-time
                                              type: string
                                            message:
                                              description: Human-readable message
                                                indicating details about last transition.
                                              type: string
                                            reason:
                                              description: Unique, this should be
                                                a short, machine understandable string
                                                that gives the reason for condition's
                                                last transition. If it reports "ResizeStarted"
                                                that means the underlying persistent
                                                volume is being resized.
                                              type: string
                                            status:
                                              type: string
                                            type:
                                              description: PersistentVolumeClaimConditionType
                                                is a valid value of PersistentVolumeClaimCondition.Type
                                              type: string
                                          required:
                                          - status
                                          - type
                                          type: object
                                        type: array
                                      phase:
                                        description: Phase represents the current
                                          phase of PersistentVolumeClaim.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          terminationGracePeriod:
                            format: int64
                            type: integer
                          tolerations:
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                        type: object
                      sentinel:
                        description: SentinelSettings defines the specification of
                          the sentinel cluster
                        properties:
                          affinity:
                            description: Affinity is a group of affinity scheduling
                              rules.
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node matches
                                      the corresponding matchExpressions; the node(s)
                                      with the highest sum are the most preferred.
                                    items:
                                      description: An empty preferred scheduling term
                                        matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling
                                        term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod
                                      from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node has
                                      pods which matches the corresponding podAffinityTerm;
                                      the node(s) with the highest sum are the most
                                      preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to a pod label update),
                                      the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the anti-affinity
                                      expressions specified by this field, but it
                                      may choose a node that violates one or more
                                      of the expressions. The node that is most preferred
                                      is the one with the greatest sum of weights,
                                      i.e. for each node that meets all of the scheduling
                                      requirements (resource request, requiredDuringScheduling
                                      anti-affinity expressions, etc.), compute a
                                      sum by iterating through the elements of this
                                      field and adding "weight" to the sum if the
                                      node has pods which matches the corresponding
                                      podAffinityTerm; the node(s) with the highest
                                      sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the anti-affinity requirements
                                      specified by this field are not met at scheduling
                                      time, the pod will not be scheduled onto the
                                      node. If the anti-affinity requirements specified
                                      by this field cease to be met at some point
                                      during pod execution (e.g. due to a pod label
                                      update), the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                            This field is beta-level and is only honored
                                            when PodAffinityNamespaceSelector feature
                                            is enabled.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                            type: object
                          command:
                            items:
                              type: string
                            type: array
                          customConfig:
                            items:
                              type: string
                            type: array
                          dnsPolicy:
                            description: DNSPolicy defines how a pod's DNS will be
                              configured.
                            type: string
                          exporter:
                            description: SentinelExporter defines the specification
                              for the sentinel exporter
                            properties:
                              args:
                                items:
                                  type: string
                                type: array
                              enabled:
                                type: boolean
                              env:
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                type: string
                              imagePullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                type: string
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                            type: object
                          hostNetwork:
                            type: boolean
                          image:
                            type: string
                          imagePullPolicy:
                            description: PullPolicy describes a policy for if/when
                              to pull a container image
                            type: string
                          imagePullSecrets:
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          nodeSelector:
                            additionalProperties:
                              type: string
                            type: object
                          podAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          priorityClassName:
                            type: string
                          replicas:
                            format: int32
                            type: integer
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            description: PodSecurityContext holds pod-level security
                              attributes and common container settings. Some fields
                              are also present in container.securityContext.  Field
                              values of container.securityContext take precedence
                              over field values of PodSecurityContext.
                            properties:
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: HostProcess determines if a container
                                      should be run as a 'Host Process' container.
                                      This field is alpha-level and will only be honored
                                      by components that enable the WindowsHostProcessContainers
                                      feature flag. Setting this field without the
                                      feature flag will result in errors when validating
                                      the Pod. All of a Pod's containers must have
                                      the same effective HostProcess value (it is
                                      not allowed to have a mix of HostProcess containers
                                      and non-HostProcess containers).  In addition,
                                      if HostProcess is true then HostNetwork must
                                      also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                          serviceAccountName:
                            type: string
                          serviceAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          tolerations:
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                required:
                - spec
                type: object
            served: true
            storage: true
            subresources: {}
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: redis.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: redis
            plural: redis
            singular: redis
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      size:
                        default: small
                        description: |
                          Size of this Redis deployment. If small, it deploy redis with a single replica; if large, deploy redis with 3 replicas.
                        pattern: ^(small|large)$
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - ghcr.io/syntasso/kratix-marketplace/redis-request-pipeline:v0.1.0
    status: {}
  xaasCrd:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: env.marketplace.kratix.io
    spec:
      group: marketplace.kratix.io
      names:
        kind: env
        plural: env
        singular: env
      scope: Namespaced
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              spec:
                properties:
                  statestoreName:
                    description: |
                      The name of the statestore component to create
                    type: string
                type: object
            type: object
        served: true
        storage: true
  xaasRequestPipeline:
  - salaboy/environment-request-pipeline:v0.1.0
status: {}
